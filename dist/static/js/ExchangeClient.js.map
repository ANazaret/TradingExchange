{"version":3,"sources":["../../../static/js/ExchangeClient.js"],"names":["ExchangeClient","exchange_id","product_id","book_depth","socket","io","connect","document","domain","location","port","order_book","OrderBook","order_history","OrderHistory","bindSockets","bindEvents","data","update","$","append","emit","initExchangeData","bind","forEach","order","scrollDown","self","on","undefined","orderUpdate","bookUpdate","click","eventPlaceOrder","event","side","originalEvent","target","attributes","value","price","parseFloat","val","volume","parseInt","placeOrder","order_id","status"],"mappings":"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","file":"ExchangeClient.js","sourcesContent":["class ExchangeClient {\n    constructor(exchange_id, product_id, book_depth) {\n        this.exchange_id = exchange_id;\n        this.product_id = product_id;\n        this.book_depth = book_depth;\n        this.socket = io.connect('http://' + document.domain + ':' + location.port);\n        this.order_book = new OrderBook('#order_book', this.book_depth);\n        this.order_history = new OrderHistory(\"#order_history\", this);\n        this.bindSockets();\n        this.bindEvents();\n    }\n\n    static orderUpdate(order) {\n        $('#exchange').append(order.order_id + \" \" + order.status);\n    }\n\n    bookUpdate(data) {\n        this.order_book.update(data['order_book']);\n    }\n\n    orderUpdate(data) {\n        this.order_history.update(data);\n    }\n\n    connect() {\n        $('#exchange-name').append('Â <span class=\"glyphicon glyphicon-ok\"></span>');\n        this.socket.emit('join_exchange',\n            {'exchange_id': this.exchange_id, 'product_id': this.exchange_id + '__default'},\n            this.initExchangeData.bind(this));\n    }\n\n    initExchangeData(data) {\n        this.order_book.update(data['order_book']);\n        data['user_orders'].forEach((order) => this.order_history.update(order, true));\n        this.order_history.scrollDown();\n    }\n\n    bindSockets() {\n        const self = this;\n        this.socket.on('connect', () => self.socket.emit('connected', self.connect.bind(self)));\n        this.socket.on('exchange_update', () => undefined);\n        this.socket.on('order_update', self.orderUpdate.bind(self));\n        this.socket.on('book_update', self.bookUpdate.bind(self));\n    }\n\n    bindEvents() {\n        const self = this;\n        $('.btn-send-order').click(self.eventPlaceOrder.bind(self));\n    }\n\n    eventPlaceOrder(event) {\n        let side = event.originalEvent.target.attributes['data-side'].value;\n        let price = parseFloat($('#price').val());\n        let volume = parseInt($('#volume').val());\n        if (price > 0 && volume > 0) {\n            this.placeOrder(side, price, volume);\n        }\n    }\n\n    placeOrder(side, price, volume) {\n        this.socket.emit('place_order', {\n                'side': side,\n                'price': price,\n                'volume': volume,\n                'product_id': this.product_id\n            },\n            (order) => this.orderUpdate.bind(this)(order));\n    }\n\n    cancelOrder(order_id, product_id) {\n        this.socket.emit('cancel_order', {\n            'product_id': product_id,\n            'order_id': order_id\n        });\n    }\n}"]}